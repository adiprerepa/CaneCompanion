# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import gps_pb2 as gps__pb2


class GpsServiceStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CaneInsert = channel.unary_unary(
        '/gps.GpsService/CaneInsert',
        request_serializer=gps__pb2.CaneCoordinates.SerializeToString,
        response_deserializer=gps__pb2.InsertStatus.FromString,
        )
    self.AppRetrieve = channel.unary_unary(
        '/gps.GpsService/AppRetrieve',
        request_serializer=gps__pb2.CoordinatesID.SerializeToString,
        response_deserializer=gps__pb2.Coordinates.FromString,
        )


class GpsServiceServicer(object):
  """The greeting service definition.
  """

  def CaneInsert(self, request, context):
    """Retrieves coordinates, inserts, sends back a status.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AppRetrieve(self, request, context):
    """Retrieves user and id from database (recieved from app) and sends coordinates.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GpsServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CaneInsert': grpc.unary_unary_rpc_method_handler(
          servicer.CaneInsert,
          request_deserializer=gps__pb2.CaneCoordinates.FromString,
          response_serializer=gps__pb2.InsertStatus.SerializeToString,
      ),
      'AppRetrieve': grpc.unary_unary_rpc_method_handler(
          servicer.AppRetrieve,
          request_deserializer=gps__pb2.CoordinatesID.FromString,
          response_serializer=gps__pb2.Coordinates.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gps.GpsService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
